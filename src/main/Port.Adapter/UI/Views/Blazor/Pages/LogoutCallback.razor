@page "/Account/LogoutCallback"
@using ei8.Cortex.Diary.Application.Settings
@using ei8.Cortex.Diary.Application.Identity
@using ei8.Cortex.Diary.Port.Adapter.IO.Process.Services.Identity
@using ei8.Cortex.Diary.Domain.Model 
@inject ISettingsService SettingsService
@inject IIdentityService IdentityService
@inject NavigationManager NavManager
@inject ISignInInfoService signInInfoService

<h3>@successMessage</h3>
@code {
    private string successMessage = "Initial";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var url = this.NavManager.Uri;
            var result = ProcessUrlResult.Empty;

            if ((result = await IO.Process.Services.Identity.Helper.TryProcessLogoutUrl(
                url,
                SettingsService.LogoutCallback,
                IdentityService,
                signInInfoService
                )).Success)
            {
                // TODO: remove corresponding signInInfo based on state (currently set as bearerToken, should ideally be Id)
                switch (result.Type)
                {
                    case ProcessUrlType.Logout:
                        this.successMessage = "Logged out";
                        break;
                }
                this.StateHasChanged();
            }
        }
    }
}
